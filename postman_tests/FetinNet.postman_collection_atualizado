{
	"info": {
		"_postman_id": "ff0d3220-8452-44d2-adb8-e590c636ea05",
		"name": "FetinNet",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "45107937",
		"_collection_link": "https://pizzonin.postman.co/workspace/TRABALHO_LISTA2~e006095c-5bc6-404c-ac5b-2da026f5c7ac/collection/45107937-ff0d3220-8452-44d2-adb8-e590c636ea05?action=share&source=collection_link&creator=45107937"
	},
	"item": [
		{
			"name": "Alunos",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{Cookie}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\" : \"pizz@\",\n    \"password\" : \"123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}login",
							"host": [
								"{{BaseURL}}login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.environment.set('Cookie', response.token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}get-csrf-token",
							"host": [
								"{{BaseURL}}get-csrf-token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Todos os Alunos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Recebe um array de alunos\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an(\"array\");",
									"    if (jsonData.length > 0) {",
									"        pm.expect(jsonData[0]).to.have.property(\"nome\");",
									"    }",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}api/v1/Aluno/all",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Aluno",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Aluno inexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Acesso negado para deletar aluno\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}api/v1/Aluno/delete/?email=emailinexistente@gmail.com",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Aluno",
								"delete",
								""
							],
							"query": [
								{
									"key": "email",
									"value": "emailinexistente@gmail.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add invalido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Email inexistente no DB\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}api/v1/Aluno/get/?email=emailinexistente@gmail.com",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Aluno",
								"get",
								""
							],
							"query": [
								{
									"key": "email",
									"value": "emailinexistente@gmail.com"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Projetos",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{Cookie}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\" : \"pizz@\",\n    \"password\" : \"123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}login",
							"host": [
								"{{BaseURL}}login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"pm.environment.set('Cookie', response.token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}get-csrf-token",
							"host": [
								"{{BaseURL}}get-csrf-token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Todos os Times",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Recebe um array de times\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.an(\"array\");\r",
									"    if (jsonData.length > 0) {\r",
									"        pm.expect(jsonData[0]).to.have.property(\"numeroGrupo\");\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}api/v1/Time/all",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Time",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deleta time",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Time deletado com sucesso\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{Cookie}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseURL}}api/v1/Time/delete?numgrupo=316",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Time",
								"delete"
							],
							"query": [
								{
									"key": "numgrupo",
									"value": "316"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Deleta time Inexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Time não encontrado\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{Cookie}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseURL}}api/v1/Time/delete?numgrupo=1000",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Time",
								"delete"
							],
							"query": [
								{
									"key": "numgrupo",
									"value": "1000"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Cria projeto",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{Cookie}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "titulo",
									"value": "RelogiodoBen9000",
									"type": "text"
								},
								{
									"key": "status",
									"value": "Desclassificado",
									"type": "text"
								},
								{
									"key": "paralela",
									"value": "Outro",
									"type": "text"
								},
								{
									"key": "email_aluno1",
									"value": "linguica@gmail.com",
									"type": "text"
								},
								{
									"key": "orientador_email",
									"value": "chris@inatel.br",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{BaseURL}}api/v1/Time/create",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Time",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cria projeto com email inválido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Não deu certo a criação\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-XSRF-TOKEN",
								"value": "{{Cookie}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "titulo",
									"value": "RelogiodoBen9000",
									"type": "text"
								},
								{
									"key": "status",
									"value": "Desclassificado",
									"type": "text"
								},
								{
									"key": "paralela",
									"value": "Outro",
									"type": "text"
								},
								{
									"key": "email_aluno1",
									"value": "3213219312830918",
									"type": "text"
								},
								{
									"key": "orientador_email",
									"value": "chris@inatel.br",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{BaseURL}}api/v1/Time/create",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Time",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Busca time por ID",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		}
	]
}